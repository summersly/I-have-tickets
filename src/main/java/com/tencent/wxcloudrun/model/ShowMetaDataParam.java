package com.tencent.wxcloudrun.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * This class was generated by Ali-Generator
 * @author chengleiyi
 */
public class ShowMetaDataParam {
    /**
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     *
     * @mbg.generated
     */
    @Deprecated
    protected boolean distinct;

    /**
     *
     * @mbg.generated
     */
    protected boolean page;

    /**
     *
     * @mbg.generated
     */
    protected int pageIndex;

    /**
     *
     * @mbg.generated
     */
    protected int pageSize;

    /**
     *
     * @mbg.generated
     */
    protected int pageStart;

    /**
     *
     * @mbg.generated
     */
    protected String distinctSql;

    /**
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     *
     * @mbg.generated
     */
    public ShowMetaDataParam() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * @param orderCondition
     * @param sortType
     * @return
     *
     * @mbg.generated
     */
    public ShowMetaDataParam appendOrderByClause(OrderCondition orderCondition, SortType sortType) {
        if (null != orderByClause) {
            orderByClause = orderByClause + ", " + orderCondition.getColumnName() + " " + sortType.getValue();
        } else {
            orderByClause = orderCondition.getColumnName() + " " + sortType.getValue();
        }
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * @param distinct
     *
     * @mbg.generated
     */
    @Deprecated
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    @Deprecated
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * @param page
     * @return
     *
     * @mbg.generated
     */
    public ShowMetaDataParam setPage(boolean page) {
        this.page = page;
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public boolean isPage() {
        return page;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public int getPageIndex() {
        return pageIndex;
    }

    /**
     * @param pageSize
     * @return
     *
     * @mbg.generated
     */
    public ShowMetaDataParam setPageSize(int pageSize) {
        this.pageSize = pageSize < 1 ? 10 : pageSize;
        this.pageIndex = pageStart < 1 ? 0 : (pageStart - 1) * this.pageSize;
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public int getPageSize() {
        return pageSize;
    }

    /**
     * @param pageStart
     * @return
     *
     * @mbg.generated
     */
    public ShowMetaDataParam setPageStart(int pageStart) {
        this.pageStart = pageStart < 1 ? 1 : pageStart;
        this.pageIndex = (this.pageStart - 1) * this.pageSize;
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public int getPageStart() {
        return pageStart;
    }

    /**
     * @param pageStart
     * @param pageSize
     *
     * @mbg.generated
     */
    public void setPagination(int pageStart, int pageSize) {
        this.page = true;
        this.pageSize = pageSize < 1 ? 10 : pageSize;
        this.pageIndex = pageStart < 1 ? 0 : (pageStart - 1) * this.pageSize;
    }

    /**
     * @param condition
     * @return
     *
     * @mbg.generated
     */
    public ShowMetaDataParam appendDistinct(OrderCondition condition) {
        if (null != distinctSql){
            distinctSql = distinctSql + ", " + condition.getColumnName();
        } else {
            distinctSql = condition.getColumnName();
        }
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * @param criteria
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     *
     * @mbg.generated
     */
    protected abstract static class AbstractGeneratedCriteria {
        protected List<Criterion> criteria;

        protected AbstractGeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNull() {
            addCriterion("gmt_create is null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNotNull() {
            addCriterion("gmt_create is not null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateEqualTo(Date value) {
            addCriterion("gmt_create =", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotEqualTo(Date value) {
            addCriterion("gmt_create <>", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThan(Date value) {
            addCriterion("gmt_create >", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThanOrEqualTo(Date value) {
            addCriterion("gmt_create >=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThan(Date value) {
            addCriterion("gmt_create <", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThanOrEqualTo(Date value) {
            addCriterion("gmt_create <=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIn(List<Date> values) {
            addCriterion("gmt_create in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotIn(List<Date> values) {
            addCriterion("gmt_create not in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateBetween(Date value1, Date value2) {
            addCriterion("gmt_create between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotBetween(Date value1, Date value2) {
            addCriterion("gmt_create not between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNull() {
            addCriterion("gmt_modified is null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNotNull() {
            addCriterion("gmt_modified is not null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedEqualTo(Date value) {
            addCriterion("gmt_modified =", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotEqualTo(Date value) {
            addCriterion("gmt_modified <>", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThan(Date value) {
            addCriterion("gmt_modified >", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThanOrEqualTo(Date value) {
            addCriterion("gmt_modified >=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThan(Date value) {
            addCriterion("gmt_modified <", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThanOrEqualTo(Date value) {
            addCriterion("gmt_modified <=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIn(List<Date> values) {
            addCriterion("gmt_modified in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotIn(List<Date> values) {
            addCriterion("gmt_modified not in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedBetween(Date value1, Date value2) {
            addCriterion("gmt_modified between", value1, value2, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotBetween(Date value1, Date value2) {
            addCriterion("gmt_modified not between", value1, value2, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andShowCodeIsNull() {
            addCriterion("show_code is null");
            return (Criteria) this;
        }

        public Criteria andShowCodeIsNotNull() {
            addCriterion("show_code is not null");
            return (Criteria) this;
        }

        public Criteria andShowCodeEqualTo(String value) {
            addCriterion("show_code =", value, "showCode");
            return (Criteria) this;
        }

        public Criteria andShowCodeNotEqualTo(String value) {
            addCriterion("show_code <>", value, "showCode");
            return (Criteria) this;
        }

        public Criteria andShowCodeGreaterThan(String value) {
            addCriterion("show_code >", value, "showCode");
            return (Criteria) this;
        }

        public Criteria andShowCodeGreaterThanOrEqualTo(String value) {
            addCriterion("show_code >=", value, "showCode");
            return (Criteria) this;
        }

        public Criteria andShowCodeLessThan(String value) {
            addCriterion("show_code <", value, "showCode");
            return (Criteria) this;
        }

        public Criteria andShowCodeLessThanOrEqualTo(String value) {
            addCriterion("show_code <=", value, "showCode");
            return (Criteria) this;
        }

        public Criteria andShowCodeLike(String value) {
            addCriterion("show_code like", value, "showCode");
            return (Criteria) this;
        }

        public Criteria andShowCodeNotLike(String value) {
            addCriterion("show_code not like", value, "showCode");
            return (Criteria) this;
        }

        public Criteria andShowCodeIn(List<String> values) {
            addCriterion("show_code in", values, "showCode");
            return (Criteria) this;
        }

        public Criteria andShowCodeNotIn(List<String> values) {
            addCriterion("show_code not in", values, "showCode");
            return (Criteria) this;
        }

        public Criteria andShowCodeBetween(String value1, String value2) {
            addCriterion("show_code between", value1, value2, "showCode");
            return (Criteria) this;
        }

        public Criteria andShowCodeNotBetween(String value1, String value2) {
            addCriterion("show_code not between", value1, value2, "showCode");
            return (Criteria) this;
        }

        public Criteria andShowNameIsNull() {
            addCriterion("show_name is null");
            return (Criteria) this;
        }

        public Criteria andShowNameIsNotNull() {
            addCriterion("show_name is not null");
            return (Criteria) this;
        }

        public Criteria andShowNameEqualTo(String value) {
            addCriterion("show_name =", value, "showName");
            return (Criteria) this;
        }

        public Criteria andShowNameNotEqualTo(String value) {
            addCriterion("show_name <>", value, "showName");
            return (Criteria) this;
        }

        public Criteria andShowNameGreaterThan(String value) {
            addCriterion("show_name >", value, "showName");
            return (Criteria) this;
        }

        public Criteria andShowNameGreaterThanOrEqualTo(String value) {
            addCriterion("show_name >=", value, "showName");
            return (Criteria) this;
        }

        public Criteria andShowNameLessThan(String value) {
            addCriterion("show_name <", value, "showName");
            return (Criteria) this;
        }

        public Criteria andShowNameLessThanOrEqualTo(String value) {
            addCriterion("show_name <=", value, "showName");
            return (Criteria) this;
        }

        public Criteria andShowNameLike(String value) {
            addCriterion("show_name like", value, "showName");
            return (Criteria) this;
        }

        public Criteria andShowNameNotLike(String value) {
            addCriterion("show_name not like", value, "showName");
            return (Criteria) this;
        }

        public Criteria andShowNameIn(List<String> values) {
            addCriterion("show_name in", values, "showName");
            return (Criteria) this;
        }

        public Criteria andShowNameNotIn(List<String> values) {
            addCriterion("show_name not in", values, "showName");
            return (Criteria) this;
        }

        public Criteria andShowNameBetween(String value1, String value2) {
            addCriterion("show_name between", value1, value2, "showName");
            return (Criteria) this;
        }

        public Criteria andShowNameNotBetween(String value1, String value2) {
            addCriterion("show_name not between", value1, value2, "showName");
            return (Criteria) this;
        }

        public Criteria andMainPictureIsNull() {
            addCriterion("main_picture is null");
            return (Criteria) this;
        }

        public Criteria andMainPictureIsNotNull() {
            addCriterion("main_picture is not null");
            return (Criteria) this;
        }

        public Criteria andMainPictureEqualTo(String value) {
            addCriterion("main_picture =", value, "mainPicture");
            return (Criteria) this;
        }

        public Criteria andMainPictureNotEqualTo(String value) {
            addCriterion("main_picture <>", value, "mainPicture");
            return (Criteria) this;
        }

        public Criteria andMainPictureGreaterThan(String value) {
            addCriterion("main_picture >", value, "mainPicture");
            return (Criteria) this;
        }

        public Criteria andMainPictureGreaterThanOrEqualTo(String value) {
            addCriterion("main_picture >=", value, "mainPicture");
            return (Criteria) this;
        }

        public Criteria andMainPictureLessThan(String value) {
            addCriterion("main_picture <", value, "mainPicture");
            return (Criteria) this;
        }

        public Criteria andMainPictureLessThanOrEqualTo(String value) {
            addCriterion("main_picture <=", value, "mainPicture");
            return (Criteria) this;
        }

        public Criteria andMainPictureLike(String value) {
            addCriterion("main_picture like", value, "mainPicture");
            return (Criteria) this;
        }

        public Criteria andMainPictureNotLike(String value) {
            addCriterion("main_picture not like", value, "mainPicture");
            return (Criteria) this;
        }

        public Criteria andMainPictureIn(List<String> values) {
            addCriterion("main_picture in", values, "mainPicture");
            return (Criteria) this;
        }

        public Criteria andMainPictureNotIn(List<String> values) {
            addCriterion("main_picture not in", values, "mainPicture");
            return (Criteria) this;
        }

        public Criteria andMainPictureBetween(String value1, String value2) {
            addCriterion("main_picture between", value1, value2, "mainPicture");
            return (Criteria) this;
        }

        public Criteria andMainPictureNotBetween(String value1, String value2) {
            addCriterion("main_picture not between", value1, value2, "mainPicture");
            return (Criteria) this;
        }

        public Criteria andChannelIsNull() {
            addCriterion("channel is null");
            return (Criteria) this;
        }

        public Criteria andChannelIsNotNull() {
            addCriterion("channel is not null");
            return (Criteria) this;
        }

        public Criteria andChannelEqualTo(String value) {
            addCriterion("channel =", value, "channel");
            return (Criteria) this;
        }

        public Criteria andChannelNotEqualTo(String value) {
            addCriterion("channel <>", value, "channel");
            return (Criteria) this;
        }

        public Criteria andChannelGreaterThan(String value) {
            addCriterion("channel >", value, "channel");
            return (Criteria) this;
        }

        public Criteria andChannelGreaterThanOrEqualTo(String value) {
            addCriterion("channel >=", value, "channel");
            return (Criteria) this;
        }

        public Criteria andChannelLessThan(String value) {
            addCriterion("channel <", value, "channel");
            return (Criteria) this;
        }

        public Criteria andChannelLessThanOrEqualTo(String value) {
            addCriterion("channel <=", value, "channel");
            return (Criteria) this;
        }

        public Criteria andChannelLike(String value) {
            addCriterion("channel like", value, "channel");
            return (Criteria) this;
        }

        public Criteria andChannelNotLike(String value) {
            addCriterion("channel not like", value, "channel");
            return (Criteria) this;
        }

        public Criteria andChannelIn(List<String> values) {
            addCriterion("channel in", values, "channel");
            return (Criteria) this;
        }

        public Criteria andChannelNotIn(List<String> values) {
            addCriterion("channel not in", values, "channel");
            return (Criteria) this;
        }

        public Criteria andChannelBetween(String value1, String value2) {
            addCriterion("channel between", value1, value2, "channel");
            return (Criteria) this;
        }

        public Criteria andChannelNotBetween(String value1, String value2) {
            addCriterion("channel not between", value1, value2, "channel");
            return (Criteria) this;
        }

        public Criteria andLastShowTimeIsNull() {
            addCriterion("last_show_time is null");
            return (Criteria) this;
        }

        public Criteria andLastShowTimeIsNotNull() {
            addCriterion("last_show_time is not null");
            return (Criteria) this;
        }

        public Criteria andLastShowTimeEqualTo(Date value) {
            addCriterion("last_show_time =", value, "lastShowTime");
            return (Criteria) this;
        }

        public Criteria andLastShowTimeNotEqualTo(Date value) {
            addCriterion("last_show_time <>", value, "lastShowTime");
            return (Criteria) this;
        }

        public Criteria andLastShowTimeGreaterThan(Date value) {
            addCriterion("last_show_time >", value, "lastShowTime");
            return (Criteria) this;
        }

        public Criteria andLastShowTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("last_show_time >=", value, "lastShowTime");
            return (Criteria) this;
        }

        public Criteria andLastShowTimeLessThan(Date value) {
            addCriterion("last_show_time <", value, "lastShowTime");
            return (Criteria) this;
        }

        public Criteria andLastShowTimeLessThanOrEqualTo(Date value) {
            addCriterion("last_show_time <=", value, "lastShowTime");
            return (Criteria) this;
        }

        public Criteria andLastShowTimeIn(List<Date> values) {
            addCriterion("last_show_time in", values, "lastShowTime");
            return (Criteria) this;
        }

        public Criteria andLastShowTimeNotIn(List<Date> values) {
            addCriterion("last_show_time not in", values, "lastShowTime");
            return (Criteria) this;
        }

        public Criteria andLastShowTimeBetween(Date value1, Date value2) {
            addCriterion("last_show_time between", value1, value2, "lastShowTime");
            return (Criteria) this;
        }

        public Criteria andLastShowTimeNotBetween(Date value1, Date value2) {
            addCriterion("last_show_time not between", value1, value2, "lastShowTime");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Byte value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Byte value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Byte value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Byte value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Byte value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Byte value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Byte> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Byte> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Byte value1, Byte value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Byte value1, Byte value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andIndexIsNull() {
            addCriterion("index is null");
            return (Criteria) this;
        }

        public Criteria andIndexIsNotNull() {
            addCriterion("index is not null");
            return (Criteria) this;
        }

        public Criteria andIndexEqualTo(Integer value) {
            addCriterion("index =", value, "index");
            return (Criteria) this;
        }

        public Criteria andIndexNotEqualTo(Integer value) {
            addCriterion("index <>", value, "index");
            return (Criteria) this;
        }

        public Criteria andIndexGreaterThan(Integer value) {
            addCriterion("index >", value, "index");
            return (Criteria) this;
        }

        public Criteria andIndexGreaterThanOrEqualTo(Integer value) {
            addCriterion("index >=", value, "index");
            return (Criteria) this;
        }

        public Criteria andIndexLessThan(Integer value) {
            addCriterion("index <", value, "index");
            return (Criteria) this;
        }

        public Criteria andIndexLessThanOrEqualTo(Integer value) {
            addCriterion("index <=", value, "index");
            return (Criteria) this;
        }

        public Criteria andIndexIn(List<Integer> values) {
            addCriterion("index in", values, "index");
            return (Criteria) this;
        }

        public Criteria andIndexNotIn(List<Integer> values) {
            addCriterion("index not in", values, "index");
            return (Criteria) this;
        }

        public Criteria andIndexBetween(Integer value1, Integer value2) {
            addCriterion("index between", value1, value2, "index");
            return (Criteria) this;
        }

        public Criteria andIndexNotBetween(Integer value1, Integer value2) {
            addCriterion("index not between", value1, value2, "index");
            return (Criteria) this;
        }

        public Criteria andIdEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id =", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdNotEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id <>", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id >", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id >=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThanWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id <", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id <=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdInWhenPresent(List<Long> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("id in", values, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdNotInWhenPresent(List<Long> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("id not in", values, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdBetweenWhenPresent(Long value1, Long value2) {
            if(value1 != null && value2 != null){
                addCriterion("id between", value1, value2, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdNotBetweenWhenPresent(Long value1, Long value2) {
            if(value1 != null && value2 != null){
                addCriterion("id not between", value1, value2, "id");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create =", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create <>", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create >", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create >=", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create <", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create <=", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("gmt_create in", values, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("gmt_create not in", values, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("gmt_create between", value1, value2, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("gmt_create not between", value1, value2, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified =", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified <>", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified >", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified >=", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified <", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified <=", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("gmt_modified in", values, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("gmt_modified not in", values, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("gmt_modified between", value1, value2, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("gmt_modified not between", value1, value2, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andShowCodeEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("show_code =", value, "showCode");
            }
            return (Criteria) this;
        }

        public Criteria andShowCodeNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("show_code <>", value, "showCode");
            }
            return (Criteria) this;
        }

        public Criteria andShowCodeGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("show_code >", value, "showCode");
            }
            return (Criteria) this;
        }

        public Criteria andShowCodeGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("show_code >=", value, "showCode");
            }
            return (Criteria) this;
        }

        public Criteria andShowCodeLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("show_code <", value, "showCode");
            }
            return (Criteria) this;
        }

        public Criteria andShowCodeLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("show_code <=", value, "showCode");
            }
            return (Criteria) this;
        }

        public Criteria andShowCodeLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("show_code like", value, "showCode");
            }
            return (Criteria) this;
        }

        public Criteria andShowCodeNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("show_code not like", value, "showCode");
            }
            return (Criteria) this;
        }

        public Criteria andShowCodeInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("show_code in", values, "showCode");
            }
            return (Criteria) this;
        }

        public Criteria andShowCodeNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("show_code not in", values, "showCode");
            }
            return (Criteria) this;
        }

        public Criteria andShowCodeBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("show_code between", value1, value2, "showCode");
            }
            return (Criteria) this;
        }

        public Criteria andShowCodeNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("show_code not between", value1, value2, "showCode");
            }
            return (Criteria) this;
        }

        public Criteria andShowNameEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("show_name =", value, "showName");
            }
            return (Criteria) this;
        }

        public Criteria andShowNameNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("show_name <>", value, "showName");
            }
            return (Criteria) this;
        }

        public Criteria andShowNameGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("show_name >", value, "showName");
            }
            return (Criteria) this;
        }

        public Criteria andShowNameGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("show_name >=", value, "showName");
            }
            return (Criteria) this;
        }

        public Criteria andShowNameLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("show_name <", value, "showName");
            }
            return (Criteria) this;
        }

        public Criteria andShowNameLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("show_name <=", value, "showName");
            }
            return (Criteria) this;
        }

        public Criteria andShowNameLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("show_name like", value, "showName");
            }
            return (Criteria) this;
        }

        public Criteria andShowNameNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("show_name not like", value, "showName");
            }
            return (Criteria) this;
        }

        public Criteria andShowNameInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("show_name in", values, "showName");
            }
            return (Criteria) this;
        }

        public Criteria andShowNameNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("show_name not in", values, "showName");
            }
            return (Criteria) this;
        }

        public Criteria andShowNameBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("show_name between", value1, value2, "showName");
            }
            return (Criteria) this;
        }

        public Criteria andShowNameNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("show_name not between", value1, value2, "showName");
            }
            return (Criteria) this;
        }

        public Criteria andMainPictureEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("main_picture =", value, "mainPicture");
            }
            return (Criteria) this;
        }

        public Criteria andMainPictureNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("main_picture <>", value, "mainPicture");
            }
            return (Criteria) this;
        }

        public Criteria andMainPictureGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("main_picture >", value, "mainPicture");
            }
            return (Criteria) this;
        }

        public Criteria andMainPictureGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("main_picture >=", value, "mainPicture");
            }
            return (Criteria) this;
        }

        public Criteria andMainPictureLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("main_picture <", value, "mainPicture");
            }
            return (Criteria) this;
        }

        public Criteria andMainPictureLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("main_picture <=", value, "mainPicture");
            }
            return (Criteria) this;
        }

        public Criteria andMainPictureLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("main_picture like", value, "mainPicture");
            }
            return (Criteria) this;
        }

        public Criteria andMainPictureNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("main_picture not like", value, "mainPicture");
            }
            return (Criteria) this;
        }

        public Criteria andMainPictureInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("main_picture in", values, "mainPicture");
            }
            return (Criteria) this;
        }

        public Criteria andMainPictureNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("main_picture not in", values, "mainPicture");
            }
            return (Criteria) this;
        }

        public Criteria andMainPictureBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("main_picture between", value1, value2, "mainPicture");
            }
            return (Criteria) this;
        }

        public Criteria andMainPictureNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("main_picture not between", value1, value2, "mainPicture");
            }
            return (Criteria) this;
        }

        public Criteria andChannelEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("channel =", value, "channel");
            }
            return (Criteria) this;
        }

        public Criteria andChannelNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("channel <>", value, "channel");
            }
            return (Criteria) this;
        }

        public Criteria andChannelGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("channel >", value, "channel");
            }
            return (Criteria) this;
        }

        public Criteria andChannelGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("channel >=", value, "channel");
            }
            return (Criteria) this;
        }

        public Criteria andChannelLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("channel <", value, "channel");
            }
            return (Criteria) this;
        }

        public Criteria andChannelLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("channel <=", value, "channel");
            }
            return (Criteria) this;
        }

        public Criteria andChannelLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("channel like", value, "channel");
            }
            return (Criteria) this;
        }

        public Criteria andChannelNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("channel not like", value, "channel");
            }
            return (Criteria) this;
        }

        public Criteria andChannelInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("channel in", values, "channel");
            }
            return (Criteria) this;
        }

        public Criteria andChannelNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("channel not in", values, "channel");
            }
            return (Criteria) this;
        }

        public Criteria andChannelBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("channel between", value1, value2, "channel");
            }
            return (Criteria) this;
        }

        public Criteria andChannelNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("channel not between", value1, value2, "channel");
            }
            return (Criteria) this;
        }

        public Criteria andLastShowTimeEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("last_show_time =", value, "lastShowTime");
            }
            return (Criteria) this;
        }

        public Criteria andLastShowTimeNotEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("last_show_time <>", value, "lastShowTime");
            }
            return (Criteria) this;
        }

        public Criteria andLastShowTimeGreaterThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("last_show_time >", value, "lastShowTime");
            }
            return (Criteria) this;
        }

        public Criteria andLastShowTimeGreaterThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("last_show_time >=", value, "lastShowTime");
            }
            return (Criteria) this;
        }

        public Criteria andLastShowTimeLessThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("last_show_time <", value, "lastShowTime");
            }
            return (Criteria) this;
        }

        public Criteria andLastShowTimeLessThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("last_show_time <=", value, "lastShowTime");
            }
            return (Criteria) this;
        }

        public Criteria andLastShowTimeInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("last_show_time in", values, "lastShowTime");
            }
            return (Criteria) this;
        }

        public Criteria andLastShowTimeNotInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("last_show_time not in", values, "lastShowTime");
            }
            return (Criteria) this;
        }

        public Criteria andLastShowTimeBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("last_show_time between", value1, value2, "lastShowTime");
            }
            return (Criteria) this;
        }

        public Criteria andLastShowTimeNotBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("last_show_time not between", value1, value2, "lastShowTime");
            }
            return (Criteria) this;
        }

        public Criteria andStatusEqualToWhenPresent(Byte value) {
            if(value != null) {
                addCriterion("status =", value, "status");
            }
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualToWhenPresent(Byte value) {
            if(value != null) {
                addCriterion("status <>", value, "status");
            }
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanWhenPresent(Byte value) {
            if(value != null) {
                addCriterion("status >", value, "status");
            }
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualToWhenPresent(Byte value) {
            if(value != null) {
                addCriterion("status >=", value, "status");
            }
            return (Criteria) this;
        }

        public Criteria andStatusLessThanWhenPresent(Byte value) {
            if(value != null) {
                addCriterion("status <", value, "status");
            }
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualToWhenPresent(Byte value) {
            if(value != null) {
                addCriterion("status <=", value, "status");
            }
            return (Criteria) this;
        }

        public Criteria andStatusInWhenPresent(List<Byte> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("status in", values, "status");
            }
            return (Criteria) this;
        }

        public Criteria andStatusNotInWhenPresent(List<Byte> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("status not in", values, "status");
            }
            return (Criteria) this;
        }

        public Criteria andStatusBetweenWhenPresent(Byte value1, Byte value2) {
            if(value1 != null && value2 != null){
                addCriterion("status between", value1, value2, "status");
            }
            return (Criteria) this;
        }

        public Criteria andStatusNotBetweenWhenPresent(Byte value1, Byte value2) {
            if(value1 != null && value2 != null){
                addCriterion("status not between", value1, value2, "status");
            }
            return (Criteria) this;
        }

        public Criteria andIndexEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("index =", value, "index");
            }
            return (Criteria) this;
        }

        public Criteria andIndexNotEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("index <>", value, "index");
            }
            return (Criteria) this;
        }

        public Criteria andIndexGreaterThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("index >", value, "index");
            }
            return (Criteria) this;
        }

        public Criteria andIndexGreaterThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("index >=", value, "index");
            }
            return (Criteria) this;
        }

        public Criteria andIndexLessThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("index <", value, "index");
            }
            return (Criteria) this;
        }

        public Criteria andIndexLessThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("index <=", value, "index");
            }
            return (Criteria) this;
        }

        public Criteria andIndexInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("index in", values, "index");
            }
            return (Criteria) this;
        }

        public Criteria andIndexNotInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("index not in", values, "index");
            }
            return (Criteria) this;
        }

        public Criteria andIndexBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("index between", value1, value2, "index");
            }
            return (Criteria) this;
        }

        public Criteria andIndexNotBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("index not between", value1, value2, "index");
            }
            return (Criteria) this;
        }
    }

    /**
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends AbstractGeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    /**
     *
     * @mbg.generated
     */
    public enum OrderCondition {
        /**
         *主键
         */
        ID("id"),
        /**
         *创建时间
         */
        GMTCREATE("gmt_create"),
        /**
         *修改时间
         */
        GMTMODIFIED("gmt_modified"),
        /**
         *null
         */
        SHOWCODE("show_code"),
        /**
         *null
         */
        SHOWNAME("show_name"),
        /**
         *主图
         */
        MAINPICTURE("main_picture"),
        /**
         *渠道
         */
        CHANNEL("channel"),
        /**
         *最后一场的时间
         */
        LASTSHOWTIME("last_show_time"),
        /**
         *状态
         */
        STATUS("status"),
        /**
         *排序顺序
         */
        INDEX("index");

        private String columnName;

        OrderCondition(String columnName) {
            this.columnName = columnName;
        }

        public String getColumnName() {
            return columnName;
        }

        public static OrderCondition getEnumByName(String name) {
            OrderCondition[] orderConditions = OrderCondition.values();
            for (OrderCondition orderCondition : orderConditions) {
                if (orderCondition.name().equalsIgnoreCase(name)) {
                    return orderCondition;
                }
            }
            throw new RuntimeException("OrderCondition of " + name + " enum not exist");
        }

        @Override
        public String toString() {
            return columnName;
        }
    }

    /**
     *
     * @mbg.generated
     */
    public enum SortType {
        /**
         * 升序
         */
        ASC("asc"),
        /**
         * 降序
         */
        DESC("desc");

        private String value;

        SortType(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        public static SortType getEnumByName(String name) {
            SortType[] sortTypes = SortType.values();
            for (SortType sortType : sortTypes) {
                if (sortType.name().equalsIgnoreCase(name)) {
                    return sortType;
                }
            }
            throw new RuntimeException("SortType of " + name + " enum not exist");
        }

        @Override
        public String toString() {
            return value;
        }
    }
}